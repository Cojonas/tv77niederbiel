{"version":3,"file":"static/webpack/static/development/pages/index.js.911b5a383cfae1246159.hot-update.js","sources":["webpack:///./components/Calendar.js"],"sourcesContent":["import { useState } from 'react';\nimport fetch from 'isomorphic-fetch'\nimport Async from \"react-async\"\nimport Event from \"./Event\"\n\n\nfunction Calendar (props) {\n\n    const [isLoading, setIsLoading] = useState(true)\n\n    const TV77_GOOGLE_LINK = \"https://calendar.google.com/calendar/ical/qon9spr0t5bgpjhle96hplu2r0%40group.calendar.google.com/public/basic.ics\"\n    const cal_id = \"qon9spr0t5bgpjhle96hplu2r0@group.calendar.google.com\";\n    const api_key = \"AIzaSyAeFY2tXUCqkNuMp5wIN2hrotK4mnvZgqk\"\n\n    const api_link = \"https://www.googleapis.com/calendar/v3/calendars/qon9spr0t5bgpjhle96hplu2r0@group.calendar.google.com/events?key=AIzaSyAeFY2tXUCqkNuMp5wIN2hrotK4mnvZgqk\"\n\n\n\n    const ics_data = async () =>{\n        const res = await fetch(api_link)\n        if (!res.ok) throw new Error(res.statusText)\n        return res.json()\n    }\n    \n\n\n    return <>\n            <Async promiseFn={ics_data}>\n                {({data, error, isLoading}) => {\n                        if (isLoading) return \"Loading\"\n                        if (error) return error.message\n                        return <div className=\"h-scrollmenu\" > {\n                            data.items.map((item) => <div><Event key={item.id} item={item} /></div>)\n                            }\n                        </div>\n\n\n                }}\n            </Async>\n            <style jsx>\n            {\n                `\n                .h-scrollmenu {\n                    background-color: #333;\n                    overflow: auto;\n                    white-space: nowrap;\n                    margin: 0 200px; \n                }\n                .h-scrollmenu > div {\n                    display: inline-block;\n                }\n\n              \n                `\n            }\n            </style> \n\n\n    </>\n}\n\nexport default Calendar; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAXA;AAAA;AAAA;AAiCA;AACA;AACA;;;;A","sourceRoot":""}